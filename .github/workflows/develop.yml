name: Codeground FE CI/CD

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-fe:
    if: github.repository_owner == 'Kraftonjungle-MyWeapon'
    runs-on: ubuntu-latest

    env:
      PROD_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET}}
      DEV_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_DEV }}
      PROD_CF_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
      DEV_CF_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_DEV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build FE for Production
        if: github.ref == 'refs/heads/main'
        run: npm run build

      - name: Build FE for Development
        if: github.ref == 'refs/heads/develop'
        run: npm run build:dev

      # OIDC 방식으로 AWS 인증 (S3 업로드 권한 필요!)
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}

       # 조건에 따라 S3 업로드
      - name: Upload to PROD S3
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 sync ./dist s3://$PROD_S3_BUCKET --delete

      - name: Upload to DEV S3
        if: github.ref == 'refs/heads/develop'
        run: |
          aws s3 sync ./dist s3://$DEV_S3_BUCKET --delete

      # CloudFront 캐시 무효화 (Invalidate, 선택)
       # 조건에 따라 CloudFront Invalidation
      - name: Invalidate PROD CloudFront cache
        if: github.ref == 'refs/heads/main'
        run: |
          aws cloudfront create-invalidation --distribution-id $PROD_CF_ID --paths "/*"

      - name: Invalidate DEV CloudFront cache
        if: github.ref == 'refs/heads/develop'
        run: |
          aws cloudfront create-invalidation --distribution-id $DEV_CF_ID --paths "/*"
